[{"idx":0,"type":"function","name":"__main__","code":"__main__","source":"example2/result.py","children":[1],"context":null},{"idx":1,"type":"class","name":"Printer","code":"class Printer:\n\n    def __init__(self):\n        pass\n\n    def print_daily_average(self, daily_averages):\n        print('Daily Averages:')\n        for (city, averages) in daily_averages.items():\n            print(f'\\n{city}:')\n            for avg in averages:\n                print(f' - {avg:.2f}')\n\n    def print_monthly_average(self, monthly_averages):\n        print('\\nMonthly Averages:')\n        for (city, months) in monthly_averages.items():\n            print(f'\\n{city}:')\n            for (month, avg_values) in months.items():\n                print(f' - Month {month}: Temp: {avg_values[0]:.2f}, Hum: {avg_values[1]:.2f}, Wind: {avg_values[2]:.2f}')\n\n    def print_extreme_events(self, extreme_events):\n        print('\\nExtreme Weather Events:')\n        for (city, events) in extreme_events.items():\n            print(f'\\n{city}:')\n            for event in events:\n                print(f' - Date: {event[0]}, Temp: {event[1]:.2f}, Wind: {event[2]:.2f}')\n\n    def print_temperature_trends(self, trends):\n        print('\\nTemperature Trends:')\n        for (city, trend) in trends.items():\n            (slope, intercept) = trend\n            trend_line = 'increasing' if slope > 0 else 'decreasing'\n            print(f'{city}: Trend is {trend_line}, Slope: {slope:.2f}')\n\n    def print_correlation_analysis(self, correlations):\n        print('\\nCorrelations between Weather Parameters:')\n        for (city, corr_values) in correlations.items():\n            print(f'\\n{city}:')\n            for (pair, corr) in corr_values.items():\n                print(f' - {pair}: {corr:.2f}')\n\n    def print_extreme_weather_frequency(self, frequencies):\n        print('\\nFrequency of Extreme Weather Events:')\n        for (city, frequency) in frequencies.items():\n            print(f'{city}: {frequency} events')\n\n    def print_yearly_summary(self, yearly_stats):\n        print('\\nYearly Summary Statistics:')\n        for (city, stats) in yearly_stats.items():\n            print(f'\\n{city}:')\n            for (stat_name, value) in stats.items():\n                print(f' - {stat_name}: {value:.2f}')\n\n    def print_max_min_temp_days(self, max_min_temp_days):\n        print('\\nDays with Maximum and Minimum Temperatures:')\n        for (city, temp_info) in max_min_temp_days.items():\n            print(f'\\n{city}:')\n            print(f\" - Maximum Temperature: {temp_info['Max Temp']:.2f} °C on {temp_info['Max Temp Day']}\")\n            print(f\" - Minimum Temperature: {temp_info['Min Temp']:.2f} °C on {temp_info['Min Temp Day']}\")","source":"example2/result.py","children":[2,3,5,7,9,12,14,16,18],"context":null},{"idx":2,"type":"function","name":"__init__","code":"def __init__(self):\n    pass","source":"example2/result.py","children":[],"context":1},{"idx":3,"type":"function","name":"print_daily_average","code":"def print_daily_average(self, daily_averages):\n    print('Daily Averages:')\n    for (city, averages) in daily_averages.items():\n        print(f'\\n{city}:')\n        for avg in averages:\n            print(f' - {avg:.2f}')","source":"example2/result.py","children":[4],"context":1},{"idx":4,"type":"variable","name":"daily_averages","code":"daily_averages","source":"example2/result.py","children":[],"context":null},{"idx":5,"type":"function","name":"print_monthly_average","code":"def print_monthly_average(self, monthly_averages):\n    print('\\nMonthly Averages:')\n    for (city, months) in monthly_averages.items():\n        print(f'\\n{city}:')\n        for (month, avg_values) in months.items():\n            print(f' - Month {month}: Temp: {avg_values[0]:.2f}, Hum: {avg_values[1]:.2f}, Wind: {avg_values[2]:.2f}')","source":"example2/result.py","children":[6],"context":1},{"idx":6,"type":"variable","name":"monthly_averages","code":"monthly_averages","source":"example2/result.py","children":[],"context":null},{"idx":7,"type":"function","name":"print_extreme_events","code":"def print_extreme_events(self, extreme_events):\n    print('\\nExtreme Weather Events:')\n    for (city, events) in extreme_events.items():\n        print(f'\\n{city}:')\n        for event in events:\n            print(f' - Date: {event[0]}, Temp: {event[1]:.2f}, Wind: {event[2]:.2f}')","source":"example2/result.py","children":[8],"context":1},{"idx":8,"type":"variable","name":"extreme_events","code":"extreme_events","source":"example2/result.py","children":[],"context":null},{"idx":9,"type":"function","name":"print_temperature_trends","code":"def print_temperature_trends(self, trends):\n    print('\\nTemperature Trends:')\n    for (city, trend) in trends.items():\n        (slope, intercept) = trend\n        trend_line = 'increasing' if slope > 0 else 'decreasing'\n        print(f'{city}: Trend is {trend_line}, Slope: {slope:.2f}')","source":"example2/result.py","children":[10,11],"context":1},{"idx":10,"type":"variable","name":"trends","code":"trends","source":"example2/result.py","children":[],"context":null},{"idx":11,"type":"variable","name":"trend_line","code":"trend_line = 'increasing' if slope > 0 else 'decreasing'","source":"example2/result.py","children":[],"context":null},{"idx":12,"type":"function","name":"print_correlation_analysis","code":"def print_correlation_analysis(self, correlations):\n    print('\\nCorrelations between Weather Parameters:')\n    for (city, corr_values) in correlations.items():\n        print(f'\\n{city}:')\n        for (pair, corr) in corr_values.items():\n            print(f' - {pair}: {corr:.2f}')","source":"example2/result.py","children":[13],"context":1},{"idx":13,"type":"variable","name":"correlations","code":"correlations","source":"example2/result.py","children":[],"context":null},{"idx":14,"type":"function","name":"print_extreme_weather_frequency","code":"def print_extreme_weather_frequency(self, frequencies):\n    print('\\nFrequency of Extreme Weather Events:')\n    for (city, frequency) in frequencies.items():\n        print(f'{city}: {frequency} events')","source":"example2/result.py","children":[15],"context":1},{"idx":15,"type":"variable","name":"frequencies","code":"frequencies","source":"example2/result.py","children":[],"context":null},{"idx":16,"type":"function","name":"print_yearly_summary","code":"def print_yearly_summary(self, yearly_stats):\n    print('\\nYearly Summary Statistics:')\n    for (city, stats) in yearly_stats.items():\n        print(f'\\n{city}:')\n        for (stat_name, value) in stats.items():\n            print(f' - {stat_name}: {value:.2f}')","source":"example2/result.py","children":[17],"context":1},{"idx":17,"type":"variable","name":"yearly_stats","code":"yearly_stats","source":"example2/result.py","children":[],"context":null},{"idx":18,"type":"function","name":"print_max_min_temp_days","code":"def print_max_min_temp_days(self, max_min_temp_days):\n    print('\\nDays with Maximum and Minimum Temperatures:')\n    for (city, temp_info) in max_min_temp_days.items():\n        print(f'\\n{city}:')\n        print(f\" - Maximum Temperature: {temp_info['Max Temp']:.2f} °C on {temp_info['Max Temp Day']}\")\n        print(f\" - Minimum Temperature: {temp_info['Min Temp']:.2f} °C on {temp_info['Min Temp Day']}\")","source":"example2/result.py","children":[19],"context":1},{"idx":19,"type":"variable","name":"max_min_temp_days","code":"max_min_temp_days","source":"example2/result.py","children":[],"context":null},{"idx":20,"type":"function","name":"__main__","code":"__main__","source":"example2/datagen.py","children":[21],"context":null},{"idx":21,"type":"function","name":"generate_weather_data","code":"def generate_weather_data(start_date, end_date, cities):\n    \"\"\"\n    Generate simulated weather data for given cities between start_date and end_date.\n    Data includes temperature (in °C), humidity (%), and wind speed (km/h).\n    \"\"\"\n    delta = end_date - start_date\n    data = {}\n    for city in cities:\n        daily_data = []\n        for day in range(delta.days + 1):\n            date = start_date + timedelta(days=day)\n            temperature = np.random.uniform(-5, 35)\n            humidity = np.random.uniform(20, 100)\n            wind_speed = np.random.uniform(0, 100)\n            daily_data.append((date, temperature, humidity, wind_speed))\n        data[city] = daily_data\n    return data","source":"example2/datagen.py","children":[22,23,24,25,26,27,28,29,30,31],"context":null},{"idx":22,"type":"variable","name":"start_date","code":"start_date","source":"example2/datagen.py","children":[],"context":null},{"idx":23,"type":"variable","name":"end_date","code":"end_date","source":"example2/datagen.py","children":[],"context":null},{"idx":24,"type":"variable","name":"cities","code":"cities","source":"example2/datagen.py","children":[],"context":null},{"idx":25,"type":"variable","name":"delta","code":"delta = end_date - start_date","source":"example2/datagen.py","children":[],"context":null},{"idx":26,"type":"variable","name":"data","code":"data = {}","source":"example2/datagen.py","children":[],"context":null},{"idx":27,"type":"variable","name":"daily_data","code":"daily_data = []","source":"example2/datagen.py","children":[],"context":null},{"idx":28,"type":"variable","name":"date","code":"date = start_date + timedelta(days=day)","source":"example2/datagen.py","children":[],"context":null},{"idx":29,"type":"variable","name":"temperature","code":"temperature = np.random.uniform(-5, 35)","source":"example2/datagen.py","children":[],"context":null},{"idx":30,"type":"variable","name":"humidity","code":"humidity = np.random.uniform(20, 100)","source":"example2/datagen.py","children":[],"context":null},{"idx":31,"type":"variable","name":"wind_speed","code":"wind_speed = np.random.uniform(0, 100)","source":"example2/datagen.py","children":[],"context":null},{"idx":32,"type":"function","name":"__main__","code":"cities = ['CityA', 'CityB', 'CityC']\nstart_date = datetime(2023, 1, 1)\nend_date = datetime(2023, 12, 31)\nweather_data = generate_weather_data(start_date, end_date, cities)\ndaily_averages = calculate_daily_average(weather_data)\nmonthly_averages = calculate_monthly_average(weather_data)\nextreme_weather = identify_extreme_events(weather_data)\ntemp_trends = temperature_trend_analysis(weather_data)\nweather_correlations = correlation_analysis(weather_data)\nextreme_event_freq = extreme_weather_frequency(weather_data)\nyearly_stats = yearly_summary(weather_data)\nmax_min_temp_days = find_max_min_temp_days(weather_data)\nprinter = Printer()\nprinter.print_extreme_events(extreme_weather)\nprinter.print_temperature_trends(temp_trends)\nprinter.print_correlation_analysis(weather_correlations)\nprinter.print_extreme_weather_frequency(extreme_event_freq)\nprinter.print_yearly_summary(yearly_stats)\nprinter.print_max_min_temp_days(max_min_temp_days)","source":"example2/main.py","children":[33,34,35,36,37,38,39,40,41,42,43,44,45],"context":null},{"idx":33,"type":"variable","name":"cities","code":"cities = ['CityA', 'CityB', 'CityC']","source":"example2/main.py","children":[],"context":null},{"idx":34,"type":"variable","name":"start_date","code":"start_date = datetime(2023, 1, 1)","source":"example2/main.py","children":[],"context":null},{"idx":35,"type":"variable","name":"end_date","code":"end_date = datetime(2023, 12, 31)","source":"example2/main.py","children":[],"context":null},{"idx":36,"type":"variable","name":"weather_data","code":"weather_data = generate_weather_data(start_date, end_date, cities)","source":"example2/main.py","children":[],"context":null},{"idx":37,"type":"variable","name":"daily_averages","code":"daily_averages = calculate_daily_average(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":38,"type":"variable","name":"monthly_averages","code":"monthly_averages = calculate_monthly_average(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":39,"type":"variable","name":"extreme_weather","code":"extreme_weather = identify_extreme_events(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":40,"type":"variable","name":"temp_trends","code":"temp_trends = temperature_trend_analysis(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":41,"type":"variable","name":"weather_correlations","code":"weather_correlations = correlation_analysis(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":42,"type":"variable","name":"extreme_event_freq","code":"extreme_event_freq = extreme_weather_frequency(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":43,"type":"variable","name":"yearly_stats","code":"yearly_stats = yearly_summary(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":44,"type":"variable","name":"max_min_temp_days","code":"max_min_temp_days = find_max_min_temp_days(weather_data)","source":"example2/main.py","children":[],"context":null},{"idx":45,"type":"variable","name":"printer","code":"printer = Printer()","source":"example2/main.py","children":[],"context":null},{"idx":46,"type":"function","name":"__main__","code":"__main__","source":"example2/analysis.py","children":[47,52,58,64,69,78,84,90],"context":null},{"idx":47,"type":"function","name":"calculate_daily_average","code":"def calculate_daily_average(data):\n    \"\"\"\n    Calculate daily average of temperature, humidity, and wind speed for each city.\n    \"\"\"\n    averages = {}\n    for (city, daily_data) in data.items():\n        daily_avg = []\n        for (_, temp, hum, wind) in daily_data:\n            avg = (temp + hum + wind) / 3\n            daily_avg.append(avg)\n        averages[city] = daily_avg\n    return averages","source":"example2/analysis.py","children":[48,49,50,51],"context":null},{"idx":48,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":49,"type":"variable","name":"averages","code":"averages = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":50,"type":"variable","name":"daily_avg","code":"daily_avg = []","source":"example2/analysis.py","children":[],"context":null},{"idx":51,"type":"variable","name":"avg","code":"avg = (temp + hum + wind) / 3","source":"example2/analysis.py","children":[],"context":null},{"idx":52,"type":"function","name":"calculate_monthly_average","code":"def calculate_monthly_average(data):\n    \"\"\"\n    Calculate monthly average of temperature, humidity, and wind speed for each city.\n    \"\"\"\n    monthly_avg = {}\n    for (city, daily_data) in data.items():\n        monthly_data = {}\n        for (date, temp, hum, wind) in daily_data:\n            month = date.month\n            if month not in monthly_data:\n                monthly_data[month] = []\n            monthly_data[month].append((temp, hum, wind))\n        for (month, values) in monthly_data.items():\n            avg = np.mean(values, axis=0)\n            if city not in monthly_avg:\n                monthly_avg[city] = {}\n            monthly_avg[city][month] = avg\n    return monthly_avg","source":"example2/analysis.py","children":[53,54,55,56,57],"context":null},{"idx":53,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":54,"type":"variable","name":"monthly_avg","code":"monthly_avg = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":55,"type":"variable","name":"monthly_data","code":"monthly_data = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":56,"type":"variable","name":"month","code":"month = date.month","source":"example2/analysis.py","children":[],"context":null},{"idx":57,"type":"variable","name":"avg","code":"avg = np.mean(values, axis=0)","source":"example2/analysis.py","children":[],"context":null},{"idx":58,"type":"function","name":"identify_extreme_events","code":"def identify_extreme_events(data, temp_threshold=35, wind_threshold=75):\n    \"\"\"\n    Identify days with extreme weather events based on given thresholds.\n    \"\"\"\n    extreme_events = {}\n    for (city, daily_data) in data.items():\n        extreme_days = []\n        for (date, temp, hum, wind) in daily_data:\n            if temp > temp_threshold or wind > wind_threshold:\n                extreme_days.append((date, temp, wind))\n        extreme_events[city] = extreme_days\n    return extreme_events","source":"example2/analysis.py","children":[59,60,61,62,63],"context":null},{"idx":59,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":60,"type":"variable","name":"temp_threshold","code":"temp_threshold","source":"example2/analysis.py","children":[],"context":null},{"idx":61,"type":"variable","name":"wind_threshold","code":"wind_threshold","source":"example2/analysis.py","children":[],"context":null},{"idx":62,"type":"variable","name":"extreme_events","code":"extreme_events = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":63,"type":"variable","name":"extreme_days","code":"extreme_days = []","source":"example2/analysis.py","children":[],"context":null},{"idx":64,"type":"function","name":"temperature_trend_analysis","code":"def temperature_trend_analysis(data):\n    \"\"\"\n    Analyze temperature trends for each city.\n    \"\"\"\n    trends = {}\n    for (city, daily_data) in data.items():\n        temps = [temp for (_, temp, _, _) in daily_data]\n        trend = np.polyfit(range(len(temps)), temps, 1)\n        trends[city] = trend\n    return trends","source":"example2/analysis.py","children":[65,66,67,68],"context":null},{"idx":65,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":66,"type":"variable","name":"trends","code":"trends = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":67,"type":"variable","name":"temps","code":"temps = [temp for (_, temp, _, _) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":68,"type":"variable","name":"trend","code":"trend = np.polyfit(range(len(temps)), temps, 1)","source":"example2/analysis.py","children":[],"context":null},{"idx":69,"type":"function","name":"correlation_analysis","code":"def correlation_analysis(data):\n    \"\"\"\n    Calculate correlation between different weather parameters for each city.\n    \"\"\"\n    correlations = {}\n    for (city, daily_data) in data.items():\n        temps = [temp for (_, temp, _, _) in daily_data]\n        hums = [hum for (_, _, hum, _) in daily_data]\n        winds = [wind for (_, _, _, wind) in daily_data]\n        temp_hum_corr = np.corrcoef(temps, hums)[0, 1]\n        temp_wind_corr = np.corrcoef(temps, winds)[0, 1]\n        hum_wind_corr = np.corrcoef(hums, winds)[0, 1]\n        correlations[city] = {'Temp-Humidity': temp_hum_corr, 'Temp-Wind': temp_wind_corr, 'Humidity-Wind': hum_wind_corr}\n    return correlations","source":"example2/analysis.py","children":[70,71,72,73,74,75,76,77],"context":null},{"idx":70,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":71,"type":"variable","name":"correlations","code":"correlations = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":72,"type":"variable","name":"temps","code":"temps = [temp for (_, temp, _, _) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":73,"type":"variable","name":"hums","code":"hums = [hum for (_, _, hum, _) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":74,"type":"variable","name":"winds","code":"winds = [wind for (_, _, _, wind) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":75,"type":"variable","name":"temp_hum_corr","code":"temp_hum_corr = np.corrcoef(temps, hums)[0, 1]","source":"example2/analysis.py","children":[],"context":null},{"idx":76,"type":"variable","name":"temp_wind_corr","code":"temp_wind_corr = np.corrcoef(temps, winds)[0, 1]","source":"example2/analysis.py","children":[],"context":null},{"idx":77,"type":"variable","name":"hum_wind_corr","code":"hum_wind_corr = np.corrcoef(hums, winds)[0, 1]","source":"example2/analysis.py","children":[],"context":null},{"idx":78,"type":"function","name":"extreme_weather_frequency","code":"def extreme_weather_frequency(data, temp_threshold=35, wind_threshold=75):\n    \"\"\"\n    Analyze the frequency of extreme weather events.\n    \"\"\"\n    frequency = {}\n    for (city, daily_data) in data.items():\n        count = sum((1 for (_, temp, _, wind) in daily_data if temp > temp_threshold or wind > wind_threshold))\n        frequency[city] = count\n    return frequency","source":"example2/analysis.py","children":[79,80,81,82,83],"context":null},{"idx":79,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":80,"type":"variable","name":"temp_threshold","code":"temp_threshold","source":"example2/analysis.py","children":[],"context":null},{"idx":81,"type":"variable","name":"wind_threshold","code":"wind_threshold","source":"example2/analysis.py","children":[],"context":null},{"idx":82,"type":"variable","name":"frequency","code":"frequency = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":83,"type":"variable","name":"count","code":"count = sum((1 for (_, temp, _, wind) in daily_data if temp > temp_threshold or wind > wind_threshold))","source":"example2/analysis.py","children":[],"context":null},{"idx":84,"type":"function","name":"yearly_summary","code":"def yearly_summary(data):\n    \"\"\"\n    Generate a summary of yearly weather statistics for each city.\n    \"\"\"\n    summary = {}\n    for (city, daily_data) in data.items():\n        temps = [temp for (_, temp, _, _) in daily_data]\n        hums = [hum for (_, _, hum, _) in daily_data]\n        winds = [wind for (_, _, _, wind) in daily_data]\n        summary[city] = {'Average Temp': np.mean(temps), 'Max Temp': max(temps), 'Min Temp': min(temps), 'Average Humidity': np.mean(hums), 'Average Wind Speed': np.mean(winds)}\n    return summary","source":"example2/analysis.py","children":[85,86,87,88,89],"context":null},{"idx":85,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":86,"type":"variable","name":"summary","code":"summary = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":87,"type":"variable","name":"temps","code":"temps = [temp for (_, temp, _, _) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":88,"type":"variable","name":"hums","code":"hums = [hum for (_, _, hum, _) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":89,"type":"variable","name":"winds","code":"winds = [wind for (_, _, _, wind) in daily_data]","source":"example2/analysis.py","children":[],"context":null},{"idx":90,"type":"function","name":"find_max_min_temp_days","code":"def find_max_min_temp_days(data):\n    \"\"\"\n    Find the days with the maximum and minimum temperatures for each city.\n    \"\"\"\n    max_min_days = {}\n    for (city, daily_data) in data.items():\n        max_temp = -float('inf')\n        min_temp = float('inf')\n        max_temp_day = None\n        min_temp_day = None\n        for day in daily_data:\n            (date, temp, _, _) = day\n            if temp > max_temp:\n                max_temp = temp\n                max_temp_day = date\n            if temp < min_temp:\n                min_temp = temp\n                min_temp_day = date\n        max_min_days[city] = {'Max Temp Day': max_temp_day, 'Max Temp': max_temp, 'Min Temp Day': min_temp_day, 'Min Temp': min_temp}\n    return max_min_days","source":"example2/analysis.py","children":[91,92,93,94,95,96,97,98,99,100],"context":null},{"idx":91,"type":"variable","name":"data","code":"data","source":"example2/analysis.py","children":[],"context":null},{"idx":92,"type":"variable","name":"max_min_days","code":"max_min_days = {}","source":"example2/analysis.py","children":[],"context":null},{"idx":93,"type":"variable","name":"max_temp","code":"max_temp = -float('inf')","source":"example2/analysis.py","children":[],"context":null},{"idx":94,"type":"variable","name":"min_temp","code":"min_temp = float('inf')","source":"example2/analysis.py","children":[],"context":null},{"idx":95,"type":"variable","name":"max_temp_day","code":"max_temp_day = None","source":"example2/analysis.py","children":[],"context":null},{"idx":96,"type":"variable","name":"min_temp_day","code":"min_temp_day = None","source":"example2/analysis.py","children":[],"context":null},{"idx":97,"type":"variable","name":"max_temp","code":"max_temp = temp","source":"example2/analysis.py","children":[],"context":null},{"idx":98,"type":"variable","name":"max_temp_day","code":"max_temp_day = date","source":"example2/analysis.py","children":[],"context":null},{"idx":99,"type":"variable","name":"min_temp","code":"min_temp = temp","source":"example2/analysis.py","children":[],"context":null},{"idx":100,"type":"variable","name":"min_temp_day","code":"min_temp_day = date","source":"example2/analysis.py","children":[],"context":null}]